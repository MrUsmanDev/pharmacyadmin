"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-to-print";
exports.ids = ["vendor-chunks/react-to-print"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-to-print/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/react-to-print/lib/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n!function(e, t) {\n     true ? module.exports = t(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"), __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\")) : 0;\n}(\"undefined\" != typeof self ? self : void 0, function(e, t) {\n    return function() {\n        \"use strict\";\n        var r = {\n            156: function(t) {\n                t.exports = e;\n            },\n            111: function(e) {\n                e.exports = t;\n            },\n            582: function(e, t, r) {\n                r.r(t), r.d(t, {\n                    __addDisposableResource: function() {\n                        return M;\n                    },\n                    __assign: function() {\n                        return i;\n                    },\n                    __asyncDelegator: function() {\n                        return O;\n                    },\n                    __asyncGenerator: function() {\n                        return E;\n                    },\n                    __asyncValues: function() {\n                        return x;\n                    },\n                    __await: function() {\n                        return S;\n                    },\n                    __awaiter: function() {\n                        return h;\n                    },\n                    __classPrivateFieldGet: function() {\n                        return C;\n                    },\n                    __classPrivateFieldIn: function() {\n                        return D;\n                    },\n                    __classPrivateFieldSet: function() {\n                        return R;\n                    },\n                    __createBinding: function() {\n                        return b;\n                    },\n                    __decorate: function() {\n                        return c;\n                    },\n                    __disposeResources: function() {\n                        return q;\n                    },\n                    __esDecorate: function() {\n                        return u;\n                    },\n                    __exportStar: function() {\n                        return v;\n                    },\n                    __extends: function() {\n                        return o;\n                    },\n                    __generator: function() {\n                        return y;\n                    },\n                    __importDefault: function() {\n                        return k;\n                    },\n                    __importStar: function() {\n                        return A;\n                    },\n                    __makeTemplateObject: function() {\n                        return j;\n                    },\n                    __metadata: function() {\n                        return p;\n                    },\n                    __param: function() {\n                        return s;\n                    },\n                    __propKey: function() {\n                        return f;\n                    },\n                    __read: function() {\n                        return m;\n                    },\n                    __rest: function() {\n                        return a;\n                    },\n                    __runInitializers: function() {\n                        return l;\n                    },\n                    __setFunctionName: function() {\n                        return d;\n                    },\n                    __spread: function() {\n                        return _;\n                    },\n                    __spreadArray: function() {\n                        return P;\n                    },\n                    __spreadArrays: function() {\n                        return w;\n                    },\n                    __values: function() {\n                        return g;\n                    }\n                });\n                var n = function(e, t) {\n                    return n = Object.setPrototypeOf || ({\n                        __proto__: []\n                    }) instanceof Array && function(e, t) {\n                        e.__proto__ = t;\n                    } || function(e, t) {\n                        for(var r in t)Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);\n                    }, n(e, t);\n                };\n                function o(e, t) {\n                    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Class extends value \" + String(t) + \" is not a constructor or null\");\n                    function r() {\n                        this.constructor = e;\n                    }\n                    n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r);\n                }\n                var i = function() {\n                    return i = Object.assign || function(e) {\n                        for(var t, r = 1, n = arguments.length; r < n; r++)for(var o in t = arguments[r])Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n                        return e;\n                    }, i.apply(this, arguments);\n                };\n                function a(e, t) {\n                    var r = {};\n                    for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);\n                    if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n                        var o = 0;\n                        for(n = Object.getOwnPropertySymbols(e); o < n.length; o++)t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]]);\n                    }\n                    return r;\n                }\n                function c(e, t, r, n) {\n                    var o, i = arguments.length, a = i < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;\n                    if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, n);\n                    else for(var c = e.length - 1; c >= 0; c--)(o = e[c]) && (a = (i < 3 ? o(a) : i > 3 ? o(t, r, a) : o(t, r)) || a);\n                    return i > 3 && a && Object.defineProperty(t, r, a), a;\n                }\n                function s(e, t) {\n                    return function(r, n) {\n                        t(r, n, e);\n                    };\n                }\n                function u(e, t, r, n, o, i) {\n                    function a(e) {\n                        if (void 0 !== e && \"function\" != typeof e) throw new TypeError(\"Function expected\");\n                        return e;\n                    }\n                    for(var c, s = n.kind, u = \"getter\" === s ? \"get\" : \"setter\" === s ? \"set\" : \"value\", l = !t && e ? n.static ? e : e.prototype : null, f = t || (l ? Object.getOwnPropertyDescriptor(l, n.name) : {}), d = !1, p = r.length - 1; p >= 0; p--){\n                        var h = {};\n                        for(var y in n)h[y] = \"access\" === y ? {} : n[y];\n                        for(var y in n.access)h.access[y] = n.access[y];\n                        h.addInitializer = function(e) {\n                            if (d) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n                            i.push(a(e || null));\n                        };\n                        var b = (0, r[p])(\"accessor\" === s ? {\n                            get: f.get,\n                            set: f.set\n                        } : f[u], h);\n                        if (\"accessor\" === s) {\n                            if (void 0 === b) continue;\n                            if (null === b || \"object\" != typeof b) throw new TypeError(\"Object expected\");\n                            (c = a(b.get)) && (f.get = c), (c = a(b.set)) && (f.set = c), (c = a(b.init)) && o.unshift(c);\n                        } else (c = a(b)) && (\"field\" === s ? o.unshift(c) : f[u] = c);\n                    }\n                    l && Object.defineProperty(l, n.name, f), d = !0;\n                }\n                function l(e, t, r) {\n                    for(var n = arguments.length > 2, o = 0; o < t.length; o++)r = n ? t[o].call(e, r) : t[o].call(e);\n                    return n ? r : void 0;\n                }\n                function f(e) {\n                    return \"symbol\" == typeof e ? e : \"\".concat(e);\n                }\n                function d(e, t, r) {\n                    return \"symbol\" == typeof t && (t = t.description ? \"[\".concat(t.description, \"]\") : \"\"), Object.defineProperty(e, \"name\", {\n                        configurable: !0,\n                        value: r ? \"\".concat(r, \" \", t) : t\n                    });\n                }\n                function p(e, t) {\n                    if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.metadata) return Reflect.metadata(e, t);\n                }\n                function h(e, t, r, n) {\n                    return new (r || (r = Promise))(function(o, i) {\n                        function a(e) {\n                            try {\n                                s(n.next(e));\n                            } catch (e) {\n                                i(e);\n                            }\n                        }\n                        function c(e) {\n                            try {\n                                s(n.throw(e));\n                            } catch (e) {\n                                i(e);\n                            }\n                        }\n                        function s(e) {\n                            var t;\n                            e.done ? o(e.value) : (t = e.value, t instanceof r ? t : new r(function(e) {\n                                e(t);\n                            })).then(a, c);\n                        }\n                        s((n = n.apply(e, t || [])).next());\n                    });\n                }\n                function y(e, t) {\n                    var r, n, o, i, a = {\n                        label: 0,\n                        sent: function() {\n                            if (1 & o[0]) throw o[1];\n                            return o[1];\n                        },\n                        trys: [],\n                        ops: []\n                    };\n                    return i = {\n                        next: c(0),\n                        throw: c(1),\n                        return: c(2)\n                    }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function() {\n                        return this;\n                    }), i;\n                    function c(c) {\n                        return function(s) {\n                            return function(c) {\n                                if (r) throw new TypeError(\"Generator is already executing.\");\n                                for(; i && (i = 0, c[0] && (a = 0)), a;)try {\n                                    if (r = 1, n && (o = 2 & c[0] ? n.return : c[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, c[1])).done) return o;\n                                    switch(n = 0, o && (c = [\n                                        2 & c[0],\n                                        o.value\n                                    ]), c[0]){\n                                        case 0:\n                                        case 1:\n                                            o = c;\n                                            break;\n                                        case 4:\n                                            return a.label++, {\n                                                value: c[1],\n                                                done: !1\n                                            };\n                                        case 5:\n                                            a.label++, n = c[1], c = [\n                                                0\n                                            ];\n                                            continue;\n                                        case 7:\n                                            c = a.ops.pop(), a.trys.pop();\n                                            continue;\n                                        default:\n                                            if (!((o = (o = a.trys).length > 0 && o[o.length - 1]) || 6 !== c[0] && 2 !== c[0])) {\n                                                a = 0;\n                                                continue;\n                                            }\n                                            if (3 === c[0] && (!o || c[1] > o[0] && c[1] < o[3])) {\n                                                a.label = c[1];\n                                                break;\n                                            }\n                                            if (6 === c[0] && a.label < o[1]) {\n                                                a.label = o[1], o = c;\n                                                break;\n                                            }\n                                            if (o && a.label < o[2]) {\n                                                a.label = o[2], a.ops.push(c);\n                                                break;\n                                            }\n                                            o[2] && a.ops.pop(), a.trys.pop();\n                                            continue;\n                                    }\n                                    c = t.call(e, a);\n                                } catch (e) {\n                                    c = [\n                                        6,\n                                        e\n                                    ], n = 0;\n                                } finally{\n                                    r = o = 0;\n                                }\n                                if (5 & c[0]) throw c[1];\n                                return {\n                                    value: c[0] ? c[1] : void 0,\n                                    done: !0\n                                };\n                            }([\n                                c,\n                                s\n                            ]);\n                        };\n                    }\n                }\n                var b = Object.create ? function(e, t, r, n) {\n                    void 0 === n && (n = r);\n                    var o = Object.getOwnPropertyDescriptor(t, r);\n                    o && !(\"get\" in o ? !t.__esModule : o.writable || o.configurable) || (o = {\n                        enumerable: !0,\n                        get: function() {\n                            return t[r];\n                        }\n                    }), Object.defineProperty(e, n, o);\n                } : function(e, t, r, n) {\n                    void 0 === n && (n = r), e[n] = t[r];\n                };\n                function v(e, t) {\n                    for(var r in e)\"default\" === r || Object.prototype.hasOwnProperty.call(t, r) || b(t, e, r);\n                }\n                function g(e) {\n                    var t = \"function\" == typeof Symbol && Symbol.iterator, r = t && e[t], n = 0;\n                    if (r) return r.call(e);\n                    if (e && \"number\" == typeof e.length) return {\n                        next: function() {\n                            return e && n >= e.length && (e = void 0), {\n                                value: e && e[n++],\n                                done: !e\n                            };\n                        }\n                    };\n                    throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n                }\n                function m(e, t) {\n                    var r = \"function\" == typeof Symbol && e[Symbol.iterator];\n                    if (!r) return e;\n                    var n, o, i = r.call(e), a = [];\n                    try {\n                        for(; (void 0 === t || t-- > 0) && !(n = i.next()).done;)a.push(n.value);\n                    } catch (e) {\n                        o = {\n                            error: e\n                        };\n                    } finally{\n                        try {\n                            n && !n.done && (r = i.return) && r.call(i);\n                        } finally{\n                            if (o) throw o.error;\n                        }\n                    }\n                    return a;\n                }\n                function _() {\n                    for(var e = [], t = 0; t < arguments.length; t++)e = e.concat(m(arguments[t]));\n                    return e;\n                }\n                function w() {\n                    for(var e = 0, t = 0, r = arguments.length; t < r; t++)e += arguments[t].length;\n                    var n = Array(e), o = 0;\n                    for(t = 0; t < r; t++)for(var i = arguments[t], a = 0, c = i.length; a < c; a++, o++)n[o] = i[a];\n                    return n;\n                }\n                function P(e, t, r) {\n                    if (r || 2 === arguments.length) for(var n, o = 0, i = t.length; o < i; o++)!n && o in t || (n || (n = Array.prototype.slice.call(t, 0, o)), n[o] = t[o]);\n                    return e.concat(n || Array.prototype.slice.call(t));\n                }\n                function S(e) {\n                    return this instanceof S ? (this.v = e, this) : new S(e);\n                }\n                function E(e, t, r) {\n                    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n                    var n, o = r.apply(e, t || []), i = [];\n                    return n = {}, a(\"next\"), a(\"throw\"), a(\"return\"), n[Symbol.asyncIterator] = function() {\n                        return this;\n                    }, n;\n                    function a(e) {\n                        o[e] && (n[e] = function(t) {\n                            return new Promise(function(r, n) {\n                                i.push([\n                                    e,\n                                    t,\n                                    r,\n                                    n\n                                ]) > 1 || c(e, t);\n                            });\n                        });\n                    }\n                    function c(e, t) {\n                        try {\n                            (r = o[e](t)).value instanceof S ? Promise.resolve(r.value.v).then(s, u) : l(i[0][2], r);\n                        } catch (e) {\n                            l(i[0][3], e);\n                        }\n                        var r;\n                    }\n                    function s(e) {\n                        c(\"next\", e);\n                    }\n                    function u(e) {\n                        c(\"throw\", e);\n                    }\n                    function l(e, t) {\n                        e(t), i.shift(), i.length && c(i[0][0], i[0][1]);\n                    }\n                }\n                function O(e) {\n                    var t, r;\n                    return t = {}, n(\"next\"), n(\"throw\", function(e) {\n                        throw e;\n                    }), n(\"return\"), t[Symbol.iterator] = function() {\n                        return this;\n                    }, t;\n                    function n(n, o) {\n                        t[n] = e[n] ? function(t) {\n                            return (r = !r) ? {\n                                value: S(e[n](t)),\n                                done: !1\n                            } : o ? o(t) : t;\n                        } : o;\n                    }\n                }\n                function x(e) {\n                    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n                    var t, r = e[Symbol.asyncIterator];\n                    return r ? r.call(e) : (e = g(e), t = {}, n(\"next\"), n(\"throw\"), n(\"return\"), t[Symbol.asyncIterator] = function() {\n                        return this;\n                    }, t);\n                    function n(r) {\n                        t[r] = e[r] && function(t) {\n                            return new Promise(function(n, o) {\n                                !function(e, t, r, n) {\n                                    Promise.resolve(n).then(function(t) {\n                                        e({\n                                            value: t,\n                                            done: r\n                                        });\n                                    }, t);\n                                }(n, o, (t = e[r](t)).done, t.value);\n                            });\n                        };\n                    }\n                }\n                function j(e, t) {\n                    return Object.defineProperty ? Object.defineProperty(e, \"raw\", {\n                        value: t\n                    }) : e.raw = t, e;\n                }\n                var T = Object.create ? function(e, t) {\n                    Object.defineProperty(e, \"default\", {\n                        enumerable: !0,\n                        value: t\n                    });\n                } : function(e, t) {\n                    e.default = t;\n                };\n                function A(e) {\n                    if (e && e.__esModule) return e;\n                    var t = {};\n                    if (null != e) for(var r in e)\"default\" !== r && Object.prototype.hasOwnProperty.call(e, r) && b(t, e, r);\n                    return T(t, e), t;\n                }\n                function k(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                }\n                function C(e, t, r, n) {\n                    if (\"a\" === r && !n) throw new TypeError(\"Private accessor was defined without a getter\");\n                    if (\"function\" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n                    return \"m\" === r ? n : \"a\" === r ? n.call(e) : n ? n.value : t.get(e);\n                }\n                function R(e, t, r, n, o) {\n                    if (\"m\" === n) throw new TypeError(\"Private method is not writable\");\n                    if (\"a\" === n && !o) throw new TypeError(\"Private accessor was defined without a setter\");\n                    if (\"function\" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n                    return \"a\" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r;\n                }\n                function D(e, t) {\n                    if (null === t || \"object\" != typeof t && \"function\" != typeof t) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n                    return \"function\" == typeof e ? t === e : e.has(t);\n                }\n                function M(e, t, r) {\n                    if (null != t) {\n                        if (\"object\" != typeof t && \"function\" != typeof t) throw new TypeError(\"Object expected.\");\n                        var n;\n                        if (r) {\n                            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n                            n = t[Symbol.asyncDispose];\n                        }\n                        if (void 0 === n) {\n                            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n                            n = t[Symbol.dispose];\n                        }\n                        if (\"function\" != typeof n) throw new TypeError(\"Object not disposable.\");\n                        e.stack.push({\n                            value: t,\n                            dispose: n,\n                            async: r\n                        });\n                    } else r && e.stack.push({\n                        async: !0\n                    });\n                    return t;\n                }\n                var I = \"function\" == typeof SuppressedError ? SuppressedError : function(e, t, r) {\n                    var n = new Error(r);\n                    return n.name = \"SuppressedError\", n.error = e, n.suppressed = t, n;\n                };\n                function q(e) {\n                    function t(t) {\n                        e.error = e.hasError ? new I(t, e.error, \"An error was suppressed during disposal.\") : t, e.hasError = !0;\n                    }\n                    return function r() {\n                        for(; e.stack.length;){\n                            var n = e.stack.pop();\n                            try {\n                                var o = n.dispose && n.dispose.call(n.value);\n                                if (n.async) return Promise.resolve(o).then(r, function(e) {\n                                    return t(e), r();\n                                });\n                            } catch (e) {\n                                t(e);\n                            }\n                        }\n                        if (e.hasError) throw e.error;\n                    }();\n                }\n                t.default = {\n                    __extends: o,\n                    __assign: i,\n                    __rest: a,\n                    __decorate: c,\n                    __param: s,\n                    __metadata: p,\n                    __awaiter: h,\n                    __generator: y,\n                    __createBinding: b,\n                    __exportStar: v,\n                    __values: g,\n                    __read: m,\n                    __spread: _,\n                    __spreadArrays: w,\n                    __spreadArray: P,\n                    __await: S,\n                    __asyncGenerator: E,\n                    __asyncDelegator: O,\n                    __asyncValues: x,\n                    __makeTemplateObject: j,\n                    __importStar: A,\n                    __importDefault: k,\n                    __classPrivateFieldGet: C,\n                    __classPrivateFieldSet: R,\n                    __classPrivateFieldIn: D,\n                    __addDisposableResource: M,\n                    __disposeResources: q\n                };\n            }\n        }, n = {};\n        function o(e) {\n            var t = n[e];\n            if (void 0 !== t) return t.exports;\n            var i = n[e] = {\n                exports: {}\n            };\n            return r[e](i, i.exports, o), i.exports;\n        }\n        o.d = function(e, t) {\n            for(var r in t)o.o(t, r) && !o.o(e, r) && Object.defineProperty(e, r, {\n                enumerable: !0,\n                get: t[r]\n            });\n        }, o.o = function(e, t) {\n            return Object.prototype.hasOwnProperty.call(e, t);\n        }, o.r = function(e) {\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            });\n        };\n        var i = {};\n        return function() {\n            var e = i;\n            Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            }), e.useReactToPrint = e.PrintContextConsumer = void 0;\n            var t = o(582), r = o(156), n = o(111), a = Object.prototype.hasOwnProperty.call(r, \"createContext\"), c = Object.prototype.hasOwnProperty.call(r, \"useMemo\") && Object.prototype.hasOwnProperty.call(r, \"useCallback\"), s = a ? r.createContext({}) : null;\n            e.PrintContextConsumer = s ? s.Consumer : function() {\n                return null;\n            };\n            var u = {\n                copyStyles: !0,\n                pageStyle: \"\\n        @page {\\n            /* Remove browser default header (title) and footer (url) */\\n            margin: 0;\\n        }\\n        @media print {\\n            body {\\n                /* Tell browsers to print background colors */\\n                -webkit-print-color-adjust: exact; /* Chrome/Safari/Edge/Opera */\\n                color-adjust: exact; /* Firefox */\\n            }\\n        }\\n    \",\n                removeAfterPrint: !1,\n                suppressErrors: !1\n            }, l = function(e) {\n                function o() {\n                    var r = null !== e && e.apply(this, arguments) || this;\n                    return r.startPrint = function(e) {\n                        var t = r.props, n = t.onAfterPrint, o = t.onPrintError, i = t.print, a = t.documentTitle;\n                        setTimeout(function() {\n                            var t, c;\n                            if (e.contentWindow) if (e.contentWindow.focus(), i) i(e).then(function() {\n                                return null == n ? void 0 : n();\n                            }).then(function() {\n                                return r.handleRemoveIframe();\n                            }).catch(function(e) {\n                                o ? o(\"print\", e) : r.logMessages([\n                                    \"An error was thrown by the specified `print` function\"\n                                ]);\n                            });\n                            else {\n                                if (e.contentWindow.print) {\n                                    var s = null !== (c = null === (t = e.contentDocument) || void 0 === t ? void 0 : t.title) && void 0 !== c ? c : \"\", u = e.ownerDocument.title;\n                                    a && (e.ownerDocument.title = a, e.contentDocument && (e.contentDocument.title = a)), e.contentWindow.print(), a && (e.ownerDocument.title = u, e.contentDocument && (e.contentDocument.title = s));\n                                } else r.logMessages([\n                                    \"Printing for this browser is not currently possible: the browser does not have a `print` method available for iframes.\"\n                                ]);\n                                null == n || n(), r.handleRemoveIframe();\n                            }\n                            else r.logMessages([\n                                \"Printing failed because the `contentWindow` of the print iframe did not load. This is possibly an error with `react-to-print`. Please file an issue: https://github.com/gregnb/react-to-print/issues/\"\n                            ]);\n                        }, 500);\n                    }, r.triggerPrint = function(e) {\n                        var t = r.props, n = t.onBeforePrint, o = t.onPrintError;\n                        if (n) {\n                            var i = n();\n                            i && \"function\" == typeof i.then ? i.then(function() {\n                                r.startPrint(e);\n                            }).catch(function(e) {\n                                o && o(\"onBeforePrint\", e);\n                            }) : r.startPrint(e);\n                        } else r.startPrint(e);\n                    }, r.handleClick = function() {\n                        var e = r.props, t = e.onBeforeGetContent, n = e.onPrintError;\n                        if (t) {\n                            var o = t();\n                            o && \"function\" == typeof o.then ? o.then(r.handlePrint).catch(function(e) {\n                                n && n(\"onBeforeGetContent\", e);\n                            }) : r.handlePrint();\n                        } else r.handlePrint();\n                    }, r.handlePrint = function() {\n                        var e = r.props, o = e.bodyClass, i = e.content, a = e.copyStyles, c = e.fonts, s = e.pageStyle, u = e.nonce, l = i();\n                        if (void 0 !== l) if (null !== l) {\n                            var f = document.createElement(\"iframe\");\n                            f.width = \"\".concat(document.documentElement.clientWidth, \"px\"), f.height = \"\".concat(document.documentElement.clientHeight, \"px\"), f.style.position = \"absolute\", f.style.top = \"-\".concat(document.documentElement.clientHeight + 100, \"px\"), f.style.left = \"-\".concat(document.documentElement.clientWidth + 100, \"px\"), f.id = \"printWindow\", f.srcdoc = \"<!DOCTYPE html>\";\n                            var d = (0, n.findDOMNode)(l);\n                            if (d) {\n                                var p = d.cloneNode(!0), h = p instanceof Text, y = document.querySelectorAll(\"link[rel~='stylesheet'], link[as='style']\"), b = h ? [] : p.querySelectorAll(\"img\"), v = h ? [] : p.querySelectorAll(\"video\"), g = c ? c.length : 0;\n                                r.numResourcesToLoad = y.length + b.length + v.length + g, r.resourcesLoaded = [], r.resourcesErrored = [];\n                                var m = function(e, n) {\n                                    r.resourcesLoaded.includes(e) ? r.logMessages([\n                                        \"Tried to mark a resource that has already been handled\",\n                                        e\n                                    ], \"debug\") : (n ? (r.logMessages(t.__spreadArray([\n                                        '\"react-to-print\" was unable to load a resource but will continue attempting to print the page'\n                                    ], t.__read(n), !1)), r.resourcesErrored.push(e)) : r.resourcesLoaded.push(e), r.resourcesLoaded.length + r.resourcesErrored.length === r.numResourcesToLoad && r.triggerPrint(f));\n                                };\n                                f.onload = function() {\n                                    var e, n, i, l;\n                                    f.onload = null;\n                                    var y = f.contentDocument || (null === (n = f.contentWindow) || void 0 === n ? void 0 : n.document);\n                                    if (y) {\n                                        y.body.appendChild(p), c && ((null === (i = f.contentDocument) || void 0 === i ? void 0 : i.fonts) && (null === (l = f.contentWindow) || void 0 === l ? void 0 : l.FontFace) ? c.forEach(function(e) {\n                                            var t = new FontFace(e.family, e.source, {\n                                                weight: e.weight,\n                                                style: e.style\n                                            });\n                                            f.contentDocument.fonts.add(t), t.loaded.then(function() {\n                                                m(t);\n                                            }).catch(function(e) {\n                                                m(t, [\n                                                    \"Failed loading the font:\",\n                                                    t,\n                                                    \"Load error:\",\n                                                    e\n                                                ]);\n                                            });\n                                        }) : (c.forEach(function(e) {\n                                            return m(e);\n                                        }), r.logMessages([\n                                            '\"react-to-print\" is not able to load custom fonts because the browser does not support the FontFace API but will continue attempting to print the page'\n                                        ])));\n                                        var g = \"function\" == typeof s ? s() : s;\n                                        if (\"string\" != typeof g) r.logMessages([\n                                            '\"react-to-print\" expected a \"string\" from `pageStyle` but received \"'.concat(typeof g, '\". Styles from `pageStyle` will not be applied.')\n                                        ]);\n                                        else {\n                                            var _ = y.createElement(\"style\");\n                                            u && (_.setAttribute(\"nonce\", u), y.head.setAttribute(\"nonce\", u)), _.appendChild(y.createTextNode(g)), y.head.appendChild(_);\n                                        }\n                                        if (o && (e = y.body.classList).add.apply(e, t.__spreadArray([], t.__read(o.split(\" \")), !1)), !h) {\n                                            for(var w = h ? [] : d.querySelectorAll(\"canvas\"), P = y.querySelectorAll(\"canvas\"), S = 0; S < w.length; ++S){\n                                                var E = w[S], O = P[S].getContext(\"2d\");\n                                                O && O.drawImage(E, 0, 0);\n                                            }\n                                            var x = function(e) {\n                                                var t = b[e], r = t.getAttribute(\"src\");\n                                                if (r) {\n                                                    var n = new Image;\n                                                    n.onload = function() {\n                                                        return m(t);\n                                                    }, n.onerror = function(e, r, n, o, i) {\n                                                        return m(t, [\n                                                            \"Error loading <img>\",\n                                                            t,\n                                                            \"Error\",\n                                                            i\n                                                        ]);\n                                                    }, n.src = r;\n                                                } else m(t, [\n                                                    'Found an <img> tag with an empty \"src\" attribute. This prevents pre-loading it. The <img> is:',\n                                                    t\n                                                ]);\n                                            };\n                                            for(S = 0; S < b.length; S++)x(S);\n                                            var j = function(e) {\n                                                var t = v[e];\n                                                t.preload = \"auto\";\n                                                var r = t.getAttribute(\"poster\");\n                                                if (r) {\n                                                    var n = new Image;\n                                                    n.onload = function() {\n                                                        return m(t);\n                                                    }, n.onerror = function(e, n, o, i, a) {\n                                                        return m(t, [\n                                                            \"Error loading video poster\",\n                                                            r,\n                                                            \"for video\",\n                                                            t,\n                                                            \"Error:\",\n                                                            a\n                                                        ]);\n                                                    }, n.src = r;\n                                                } else t.readyState >= 2 ? m(t) : (t.onloadeddata = function() {\n                                                    return m(t);\n                                                }, t.onerror = function(e, r, n, o, i) {\n                                                    return m(t, [\n                                                        \"Error loading video\",\n                                                        t,\n                                                        \"Error\",\n                                                        i\n                                                    ]);\n                                                }, t.onstalled = function() {\n                                                    return m(t, [\n                                                        \"Loading video stalled, skipping\",\n                                                        t\n                                                    ]);\n                                                });\n                                            };\n                                            for(S = 0; S < v.length; S++)j(S);\n                                            var T = \"input\", A = d.querySelectorAll(T), k = y.querySelectorAll(T);\n                                            for(S = 0; S < A.length; S++)k[S].value = A[S].value;\n                                            var C = \"input[type=checkbox],input[type=radio]\", R = d.querySelectorAll(C), D = y.querySelectorAll(C);\n                                            for(S = 0; S < R.length; S++)D[S].checked = R[S].checked;\n                                            var M = \"select\", I = d.querySelectorAll(M), q = y.querySelectorAll(M);\n                                            for(S = 0; S < I.length; S++)q[S].value = I[S].value;\n                                        }\n                                        if (a) for(var F = document.querySelectorAll(\"style, link[rel~='stylesheet'], link[as='style']\"), L = function(e, t) {\n                                            var n = F[e];\n                                            if (\"style\" === n.tagName.toLowerCase()) {\n                                                var o = y.createElement(n.tagName), i = n.sheet;\n                                                if (i) {\n                                                    var a = \"\";\n                                                    try {\n                                                        for(var c = i.cssRules.length, s = 0; s < c; ++s)\"string\" == typeof i.cssRules[s].cssText && (a += \"\".concat(i.cssRules[s].cssText, \"\\r\\n\"));\n                                                    } catch (e) {\n                                                        r.logMessages([\n                                                            \"A stylesheet could not be accessed. This is likely due to the stylesheet having cross-origin imports, and many browsers block script access to cross-origin stylesheets. See https://github.com/gregnb/react-to-print/issues/429 for details. You may be able to load the sheet by both marking the stylesheet with the cross `crossorigin` attribute, and setting the `Access-Control-Allow-Origin` header on the server serving the stylesheet. Alternatively, host the stylesheet on your domain to avoid this issue entirely.\",\n                                                            n\n                                                        ], \"warning\");\n                                                    }\n                                                    o.setAttribute(\"id\", \"react-to-print-\".concat(e)), u && o.setAttribute(\"nonce\", u), o.appendChild(y.createTextNode(a)), y.head.appendChild(o);\n                                                }\n                                            } else if (n.getAttribute(\"href\")) if (n.hasAttribute(\"disabled\")) r.logMessages([\n                                                \"`react-to-print` encountered a <link> tag with a `disabled` attribute and will ignore it. Note that the `disabled` attribute is deprecated, and some browsers ignore it. You should stop using it. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-disabled. The <link> is:\",\n                                                n\n                                            ], \"warning\"), m(n);\n                                            else {\n                                                for(var l = y.createElement(n.tagName), f = (s = 0, n.attributes.length); s < f; ++s){\n                                                    var d = n.attributes[s];\n                                                    d && l.setAttribute(d.nodeName, d.nodeValue || \"\");\n                                                }\n                                                l.onload = function() {\n                                                    return m(l);\n                                                }, l.onerror = function(e, t, r, n, o) {\n                                                    return m(l, [\n                                                        \"Failed to load\",\n                                                        l,\n                                                        \"Error:\",\n                                                        o\n                                                    ]);\n                                                }, u && l.setAttribute(\"nonce\", u), y.head.appendChild(l);\n                                            }\n                                            else r.logMessages([\n                                                \"`react-to-print` encountered a <link> tag with an empty `href` attribute. In addition to being invalid HTML, this can cause problems in many browsers, and so the <link> was not loaded. The <link> is:\",\n                                                n\n                                            ], \"warning\"), m(n);\n                                        }, W = (S = 0, F.length); S < W; ++S)L(S);\n                                    }\n                                    0 !== r.numResourcesToLoad && a || r.triggerPrint(f);\n                                }, r.handleRemoveIframe(!0), document.body.appendChild(f);\n                            } else r.logMessages([\n                                '\"react-to-print\" could not locate the DOM node corresponding with the `content` prop'\n                            ]);\n                        } else r.logMessages([\n                            'There is nothing to print because the \"content\" prop returned \"null\". Please ensure \"content\" is renderable before allowing \"react-to-print\" to be called.'\n                        ]);\n                        else r.logMessages([\n                            \"To print a functional component ensure it is wrapped with `React.forwardRef`, and ensure the forwarded ref is used. See the README for an example: https://github.com/gregnb/react-to-print#examples\"\n                        ]);\n                    }, r.handleRemoveIframe = function(e) {\n                        var t = r.props.removeAfterPrint;\n                        if (e || t) {\n                            var n = document.getElementById(\"printWindow\");\n                            n && document.body.removeChild(n);\n                        }\n                    }, r.logMessages = function(e, t) {\n                        void 0 === t && (t = \"error\"), r.props.suppressErrors || (\"error\" === t ? console.error(e) : \"warning\" === t ? console.warn(e) : \"debug\" === t && console.debug(e));\n                    }, r;\n                }\n                return t.__extends(o, e), o.prototype.render = function() {\n                    var e = this.props, t = e.children, n = e.trigger;\n                    if (n) return r.cloneElement(n(), {\n                        onClick: this.handleClick\n                    });\n                    if (!s) return this.logMessages([\n                        '\"react-to-print\" requires React ^16.3.0 to be able to use \"PrintContext\"'\n                    ]), null;\n                    var o = {\n                        handlePrint: this.handleClick\n                    };\n                    return r.createElement(s.Provider, {\n                        value: o\n                    }, t);\n                }, o.defaultProps = u, o;\n            }(r.Component);\n            e.default = l, e.useReactToPrint = function(e) {\n                if (!c) return e.suppressErrors || console.error('\"react-to-print\" requires React ^16.8.0 to be able to use \"useReactToPrint\"'), function() {\n                    throw new Error('\"react-to-print\" requires React ^16.8.0 to be able to use \"useReactToPrint\"');\n                };\n                var n = r.useMemo(function() {\n                    return new l(t.__assign(t.__assign({}, u), e));\n                }, [\n                    e\n                ]);\n                return r.useCallback(function() {\n                    return n.handleClick();\n                }, [\n                    n\n                ]);\n            };\n        }(), i;\n    }();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-to-print/lib/index.js\n");

/***/ })

};
;